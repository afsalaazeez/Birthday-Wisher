// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import React from 'react';
import { render, cleanup } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import RouterBirthday from '../../RouterBirthday';

describe('RouterBirthday component', () => {
  afterEach(cleanup);

  test('renders without crashing', () => {
    const props = { match: { params: { name: 'John', day: '10', month: '01' } } };
    const { getByText } = render(<RouterBirthday {...props} />);
    expect(getByText(/john/i)).toBeInTheDocument();
  });

  test('displays name in the Birthday component', () => {
    const props = { match: { params: { name: 'John', day: '10', month: '01' } } };
    const { getByText } = render(<RouterBirthday {...props} />);
    expect(getByText(/Happy Birthday, John!/i)).toBeInTheDocument();
  });

  test('handles non-existent dates appropriately', () => {
    const props = { match: { params: { name: 'John', day: '31', month: '02' } } };
    const { queryByText } = render(<RouterBirthday {...props} />);
    expect(queryByText(/Invalid date/i)).not.toBeNull();
  });

  // Further tests can include checking for invalid name input, date format, leap year handling, etc.
});

