// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import React from 'react';
import { render, screen } from '@testing-library/react';
import '@testing-library/jest-dom';
import Countdown from '../../Countdown'; 

describe('Countdown Component', () => {
    test('renders the countdown with proper data when it is not the birthday', () => {
        const mockCountdownData = {
            isItBday: false,
            days: 5,
            hours: 12,
            minutes: 30,
            seconds: 45,
        };
        const mockName = 'John Doe';

        render(<Countdown countdownData={mockCountdownData} name={mockName} />);

        expect(screen.getByText("Countdown to John Doe's Birthday")).toBeInTheDocument();
        expect(screen.getByText("5")).toBeInTheDocument();
        expect(screen.getByText("Days")).toBeInTheDocument();
        expect(screen.getByText("12")).toBeInTheDocument();
        expect(screen.getByText("Hours")).toBeInTheDocument();
        expect(screen.getByText("30")).toBeInTheDocument();
        expect(screen.getByText("Minutes")).toBeInTheDocument();
        expect(screen.getByText("45")).toBeInTheDocument();
        expect(screen.getByText("Seconds")).toBeInTheDocument();
    });

    test('renders the Wish component when it is the birthday', () => {
        const mockCountdownData = {
            isItBday: true,
            days: 0,
            hours: 0,
            minutes: 0,
            seconds: 0,
        };
        const mockName = 'John Doe';

        render(<Countdown countdownData={mockCountdownData} name={mockName} />);

        expect(screen.getByText("Happy Birthday John Doe!")).toBeInTheDocument();
    });

    // You can add more test cases here to cover other scenarios and edge cases
});

