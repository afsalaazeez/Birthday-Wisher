// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview

// ********RoostGPT********
// src/__tests__/src/Countdown.test.jsx

import React from "react";
import { render, screen } from "@testing-library/react";
import "@testing-library/jest-dom/extend-expect";
import Countdown from "../../Countdown.jsx"; // The relative import path from the test directory

describe("Countdown Component", () => {
  test("renders countdown when it is not the user's birthday", () => {
    const mockCountdownData = {
      isItBday: false,
      days: 10,
      hours: 5,
      minutes: 30,
      seconds: 45,
    };
    const mockName = "Alice";

    render(<Countdown countdownData={mockCountdownData} name={mockName} />);

    expect(screen.getByText("10")).toBeInTheDocument();
    expect(screen.getByText("Days")).toBeInTheDocument();
    expect(screen.getByText("5")).toBeInTheDocument();
    expect(screen.getByText("Hours")).toBeInTheDocument();
    expect(screen.getByText("30")).toBeInTheDocument();
    expect(screen.getByText("Minutes")).toBeInTheDocument();
    expect(screen.getByText("45")).toBeInTheDocument();
    expect(screen.getByText("Seconds")).toBeInTheDocument();
    expect(
      screen.getByText("Countdown to Alice's Birthday")
    ).toBeInTheDocument();
  });

  test("renders the Wish component when it is the user's birthday", () => {
    const mockCountdownData = {
      isItBday: true,
    };
    const mockName = "Bob";

    render(<Countdown countdownData={mockCountdownData} name={mockName} />);

    expect(screen.getByText("Happy Birthday Bob!")).toBeInTheDocument();
  });

  // Additional test cases to ensure full coverage could include:
  // - Tests for edge cases such as negative countdown values or non-numeric values.
  // - Tests for proper handling of missing or incorrect props type.
  // - Tests for component lifecycle if applicable (not shown here without the full component code).
});
