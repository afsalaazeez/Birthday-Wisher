// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import React from 'react';
import { render, cleanup } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import Countdown from '../../Countdown.jsx';

// Clean up after each test
afterEach(cleanup);

describe('Countdown Component', () => {
  test('renders Countdown correctly when it is not the birthday', () => {
    const countdownData = {
      isItBday: false,
      days: 5,
      hours: 23,
      minutes: 59,
      seconds: 60
    };
    const name = 'John';
    const { getByText } = render(<Countdown countdownData={countdownData} name={name} />);

    expect(getByText(/5/)).toBeInTheDocument();
    expect(getByText(/23/)).toBeInTheDocument();
    expect(getByText(/59/)).toBeInTheDocument();
    expect(getByText(/60/)).toBeInTheDocument();
    expect(getByText(/Days/)).toBeInTheDocument();
    expect(getByText(/Hours/)).toBeInTheDocument();
    expect(getByText(/Minutes/)).toBeInTheDocument();
    expect(getByText(/Seconds/)).toBeInTheDocument();
    expect(getByText(/Countdown to John's Birthday/)).toBeInTheDocument();
  });

  test('renders Wish component when it is the birthday', () => {
    const countdownData = {
      isItBday: true
    };
    const name = 'Jane';
    const { getByText } = render(<Countdown countdownData={countdownData} name={name} />);

    expect(getByText(/Happy Birthday Jane!/)).toBeInTheDocument();
  });

  // You can add more tests here to cover edge cases and error handling
});


