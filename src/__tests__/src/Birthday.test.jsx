// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import React from 'react';
import { render, screen } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import Birthday from '../../Birthday.jsx'; // Import path adjusted based on the location of the test file

// Test suite for the Birthday component
describe('Birthday Component Tests', () => {
  // Test case to check if the birthday message renders when a `name` prop is provided
  test('renders birthday message with name', () => {
    // Arrange
    const name = 'John';
    const expectedMessage = `Happy Birthday, ${name}!`;

    // Act
    render(<Birthday name={name} />);

    // Assert
    const messageElement = screen.getByText(expectedMessage);
    expect(messageElement).toBeInTheDocument();
  });

  // Test case to check if the component renders a default message if no `name` prop is provided
  test('renders default birthday message when no name is provided', () => {
    // Arrange
    const defaultMessage = 'Happy Birthday!';

    // Act
    render(<Birthday />);

    // Assert
    const defaultElement = screen.getByText(defaultMessage);
    expect(defaultElement).toBeInTheDocument();
  });

  // Additional test cases can be added here to cover edge cases, error handling, etc.
});


