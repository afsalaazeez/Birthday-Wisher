// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import React from 'react';
import { BrowserRouter as Router } from 'react-router-dom';
import { render, fireEvent, screen } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import Generate from '../../Generate.jsx'; // Import path adjusted for test file location

describe('Generate component', () => {
  test('renders without crashing', () => {
    render(
      <Router>
        <Generate />
      </Router>
    );
  });

  test('updates name input value', () => {
    render(
      <Router>
        <Generate />
      </Router>
    );
    fireEvent.change(screen.getByPlaceholderText('Enter Name'), {
      target: { value: 'John Doe' },
    });
    expect(screen.getByPlaceholderText('Enter Name').value).toBe('John Doe');
  });

  test('updates day input value', () => {
    render(
      <Router>
        <Generate />
      </Router>
    );
    fireEvent.change(screen.getByPlaceholderText('Enter Day'), {
      target: { value: 20 },
    });
    expect(screen.getByPlaceholderText('Enter Day').value).toBe('20');
  });

  test('updates month input value', () => {
    render(
      <Router>
        <Generate />
      </Router>
    );
    fireEvent.change(screen.getByDisplayValue('January'), {
      target: { value: 2 },
    });
    expect(screen.getByDisplayValue('February').selected).toBe(true);
  });

  test('generates link on button click', () => {
    render(
      <Router>
        <Generate />
      </Router>
    );
    fireEvent.change(screen.getByPlaceholderText('Enter Name'), {
      target: { value: 'John Doe' },
    });
    fireEvent.change(screen.getByPlaceholderText('Enter Day'), {
      target: { value: 20 },
    });
    fireEvent.change(screen.getByDisplayValue('January'), {
      target: { value: 2 },
    });
    fireEvent.click(screen.getByText('Generate Link'));
    expect(screen.getByText(/^https:\/\/birthday-wisher\.netlify\.app\/birthday\/John Doe\/20\/2$/)).toBeInTheDocument();
  });

  test('displays Visit Link button and generated link only if link is not empty', () => {
    render(
      <Router>
        <Generate />
      </Router>
    );
    expect(screen.queryByText('Visit Link')).not.toBeInTheDocument();
    fireEvent.click(screen.getByText('Generate Link'));
    expect(screen.getByText('Visit Link')).toBeInTheDocument();
    expect(screen.getByText(/^https:\/\/birthday-wisher\.netlify\.app\/birthday\/\/1\/1$/)).toBeInTheDocument();
  });
});

